{"version":3,"sources":["components/LoginForm.js","components/CreateBlogForm.js","components/CreateUserForm.js","components/Notification.js","Blogs.js","reducers/notificationReducer.js","services/blogs.js","services/users.js","reducers/usersReducer.js","reducers/blogReducer.js","reducers/blogsReducer.js","hooks/index.js","components/Blog.js","Users.js","reducers/userReducer.js","components/User.js","components/Togglable.js","services/login.js","reducers/loginReducer.js","App.js","index.js"],"names":["LoginForm","handleLogin","username","password","Form","onSubmit","Group","Label","Control","reset","id","Button","variant","type","CreateBlogForm","handleAddBlog","title","author","url","CreateUserForm","create","fullname","Notification","notification","useSelector","state","showNotification","message","className","Blogs","blogs","console","log","length","map","blog","key","to","setNotification","content","time","milliSeconds","dispatch","data","setTimeout","NotificationReducer","action","baseUrl","token","newObject","a","config","headers","Authorization","axios","post","response","update","put","createComment","comment","getAll","get","then","setToken","newToken","deleteBlog","delete","getOne","newUser","initializeUsers","userService","users","sortedUsers","sort","b","usersReducer","initializeBlog","blogService","blogReducer","useField","useState","value","setValue","onChange","event","target","Blog","loggedIn","history","useHistory","useDispatch","useParams","useEffect","usersBlog","user","data-testid","href","likes","onClick","newBlog","updatetBlog","updatetBlogs","like","name","window","confirm","blogList","filter","remove","push","preventDefault","commentedBlog","addComment","comments","Users","Table","bordered","userReducer","User","initializeUser","Togglable","React","forwardRef","props","ref","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","style","buttonLabel","children","displayName","login","credentials","authentication","App","usernameLogin","passwordLogin","sortedBlogs","JSON","parse","localStorage","getItem","initialState","checkAuthentication","loginService","setItem","stringify","userObject","createUser","blogForRef","createRef","blogObject","createBlog","current","Navbar","collapseOnSelect","expand","bg","Toggle","aria-controls","Collapse","Nav","Link","as","Item","removeItem","path","reducer","combineReducers","notificationReducer","blogsReducer","loginReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dededb19.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Form, Button } from 'react-bootstrap'\n\nconst LoginForm = ({ handleLogin, username, password }) => {\n  return (\n    <div>\n      <h1>Login</h1>\n      <Form onSubmit={handleLogin}>\n        <Form.Group>\n          <Form.Label>Username:</Form.Label>\n          <Form.Control {...username} reset='' id=\"username\"/>\n          <Form.Label>Password:</Form.Label>\n          <Form.Control {...password} reset='' id=\"password\"/>\n          <Button variant='success' type=\"submit\" id=\"login-button\">login</Button>\n        </Form.Group>\n      </Form>\n    </div>\n  )\n}\nLoginForm.propTypes = {\n  handleLogin: PropTypes.func.isRequired,\n  username: PropTypes.object.isRequired,\n  password: PropTypes.object.isRequired,\n}\nexport default LoginForm","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Button, Form } from 'react-bootstrap'\n\nconst CreateBlogForm = ({ handleAddBlog, title, author, url }) => (\n  <Form onSubmit={handleAddBlog}>\n    <Form.Group>\n      <Form.Label>Title:</Form.Label>\n      <Form.Control  {...title} reset='' id='title' />\n      <Form.Label>Author:</Form.Label>\n      <Form.Control {...author} reset='' id='author' />\n      <Form.Label>Url:</Form.Label>\n      <Form.Control {...url} reset='' id='url' />\n      <Button variant='success' type=\"submit\" id='add-button' >Add</Button>\n    </Form.Group>\n  </Form>\n)\nCreateBlogForm.propTypes = {\n  handleAddBlog: PropTypes.func.isRequired,\n  title: PropTypes.object.isRequired,\n  author: PropTypes.object.isRequired,\n  url: PropTypes.object.isRequired,\n}\nexport default CreateBlogForm","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Form, Button } from 'react-bootstrap'\n\nconst CreateUserForm = ({ create, fullname, username, password }) => {\n  return (\n    <div>\n      <h1>Sign up</h1>\n      <Form onSubmit={create}>\n        <Form.Group>\n          <Form.Label>Name:</Form.Label>\n          <Form.Control {...fullname} reset='' id=\"name\"/>\n          <Form.Label>Username:</Form.Label>\n          <Form.Control {...username} reset='' id=\"username\"/>\n          <Form.Label>Password:</Form.Label>\n          <Form.Control {...password} reset='' id=\"password\"/>\n          <Button variant='success' type=\"submit\" id=\"create-button\">sign up</Button>\n        </Form.Group>\n      </Form>\n    </div>\n  )\n}\nCreateUserForm.propTypes = {\n  create: PropTypes.func.isRequired,\n  fullname: PropTypes.object.isRequired,\n  username: PropTypes.object.isRequired,\n  password: PropTypes.object.isRequired,\n}\nexport default CreateUserForm","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport '../index.css'\n\nconst Notification = () => {\n  const notification = useSelector(state => state.notification)\n\n  const showNotification = () => {\n    if (notification.notification === '') {\n      return true\n    }\n    return false\n  }\n  if (notification.message === 'error') {\n    return (\n      showNotification() ? null :\n        <div className=\"error\">\n          {notification.notification}\n        </div>\n    )\n  } else if (notification.message === 'message') {\n    return (\n      showNotification() ? null :\n        <div className=\"added\">\n          {notification.notification}\n        </div>\n    )\n  }\n  return null\n}\n\nexport default Notification","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport './index.css'\n\nconst Blogs = () => {\n  const blogs = useSelector(state => state.blogs)\n  console.log(blogs.length)\n  if (blogs.length === 0) {\n    return null\n  }\n  return(\n    <div id='blogs'>\n      <h3>Blogs</h3>\n      {blogs.map(blog =>\n        <div className='list' id='box' key={blog.id}>\n          <Link to={`/blogs/${blog.id}`}>{blog.title}, by {blog.author}</Link>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default Blogs","export const setNotification = (content, time, message) => {\n  const milliSeconds = 1000 * time\n  return dispatch => {\n    dispatch({\n      type: 'SET_NOTIFICATION',\n      data: content,\n      message: message\n    })\n    setTimeout(() => {\n      dispatch({\n        type: 'HIDE_NOTIFICATION',\n        data: '',\n        message: ''\n      })\n    }, milliSeconds)\n  }\n}\n\nconst NotificationReducer = (state = '', action) => {\n  switch (action.type) {\n  case 'SET_NOTIFICATION':\n    state = {\n      notification: action.data,\n      message: action.message\n    }\n    return state\n  case 'HIDE_NOTIFICATION':\n    state = action.data\n    return state\n  default:\n    return state\n  }\n}\n\nexport default NotificationReducer","import axios from 'axios'\n\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = async newObject => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  const response = await axios.post(baseUrl, newObject, config)\n  return response.data\n}\n\nconst update = async (id, newObject) => {\n  const response = await axios.put(`${baseUrl}/${id}`, newObject)\n  return response.data\n}\n\nconst createComment = async (id, comment) => {\n  const config = {\n    headers: { Authorization: token },\n  }\n  const response = await axios.post(`${baseUrl}/${id}/comments`, comment, config)\n  return response.data\n}\n\nconst deleteBlog = async id => {\n  const config = {\n    headers: { Authorization: token }\n  }\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\n  return response.data\n}\n\nconst getOne = id => {\n  const request = axios.get(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, setToken, update, deleteBlog, getOne, createComment }","import axios from 'axios'\n\nconst baseUrl = '/api/users'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = async newUser => {\n  const response = await axios.post(baseUrl, newUser)\n  return response.data\n}\n\nconst getOne = id => {\n  const request = axios.get(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, getOne }","import userService from '../services/users'\nimport { setNotification } from '../reducers/notificationReducer'\n\nexport const createUser = (fullname, username, password) => {\n  return async dispatch => {\n    try {\n      const userObject = {\n        name: fullname.value,\n        username: username.value,\n        password: password.value\n      }\n      const newUser = await userService.create(userObject)\n      fullname.reset()\n      username.reset()\n      password.reset()\n      dispatch({\n        type: 'NEW_USER',\n        data: newUser\n      })\n    } catch (error) {\n      dispatch(setNotification(error.response.data, 5, 'error'))\n    }\n  }\n}\n\nexport const initializeUsers = () => {\n  return async dispatch => {\n    const users = await userService.getAll()\n    const sortedUsers = users.sort((a, b) => b.blogs.length - a.blogs.length)\n    dispatch({\n      type: 'INIT_USERS',\n      data: sortedUsers\n    })\n  }\n}\nconst usersReducer = (state=[], action) => {\n  switch (action.type) {\n  case 'NEW_USER':\n    return [...state, action.data]\n  case 'INIT_USERS':\n    return action.data\n  default:\n    return state\n  }\n}\n\nexport default usersReducer","import blogService from '../services/blogs'\nimport { setNotification } from '../reducers/notificationReducer'\n\nexport const initializeBlog = id => {\n  return async dispatch => {\n    try {\n      const blog = await blogService.getOne(id)\n      dispatch({\n        type: 'WANTED_BLOG',\n        data: blog\n      })\n    } catch (error) {\n      dispatch(setNotification(error.response.data, 5, 'error'))\n    }\n  }\n}\n\nexport const addComment = (id, content) => {\n  const comment = {\n    content: content.value\n  }\n  return async dispatch => {\n    try {\n      const commentedBlog = await blogService.createComment(id, comment)\n      content.reset()\n      dispatch({\n        type: 'COMMENTED_BLOG',\n        data: commentedBlog\n      })\n    } catch (error) {\n      dispatch(setNotification(error.response.data, 5, 'error'))\n    }\n  }\n}\n\nconst blogReducer = (state=null, action) => {\n  switch (action.type) {\n  case 'WANTED_BLOG':\n    return action.data\n  case 'COMMENTED_BLOG':\n    return action.data\n  default:\n    return state\n  }\n}\n\nexport default blogReducer","import blogService from '../services/blogs'\nimport { setNotification } from '../reducers/notificationReducer'\nimport { initializeUsers } from './usersReducer'\nimport { initializeBlog } from './blogReducer'\n\nexport const createBlog = (author, title, url) => {\n  return async dispatch => {\n    try {\n      const blogObject = {\n        author: author.value,\n        title: title.value,\n        url: url.value,\n      }\n      const newBlog = await blogService.create(blogObject)\n      dispatch(setNotification(`A new blog \"${blogObject.title}\" by \"${blogObject.author}\" has been added`, 5, 'message'))\n      dispatch({\n        type: 'NEW_BLOG',\n        data: newBlog\n      })\n      author.reset()\n      title.reset()\n      url.reset()\n      dispatch(initializeUsers())\n    } catch(exception) {\n      console.log(exception)\n      const content = ('Validation error! Title and url required.  Title must be at least 1 character long')\n      dispatch(setNotification(content, 5, 'error'))\n    }\n  }\n}\n\nexport const initializeBlogs = () => {\n  return async dispatch => {\n    const blogs = await blogService.getAll()\n    const sortedBlogs = blogs.sort((a,b) => b.likes - a.likes)\n    dispatch({\n      type: 'INIT_BLOGS',\n      data: sortedBlogs\n    })\n  }\n}\n\nexport const like = (blogs, blog) => {\n  const newBlog = { ...blog, user: blog.user.id, likes: blog.likes +1 }\n  return async dispatch => {\n    const updatetBlog = await blogService.update(blog.id, newBlog)\n    const updatetBlogs = blogs.map(b => b.id !== updatetBlog.id ? b : updatetBlog)\n    updatetBlogs.sort((a, b) => b.likes -a.likes)\n    dispatch(initializeBlog(updatetBlog.id))\n    dispatch({\n      type: 'UPDATE_BLOG',\n      data: updatetBlogs\n    })\n  }\n}\n\nexport const remove = (blogs, blog) => {\n  return async dispatch => {\n    try {\n      await blogService.deleteBlog(blog.id)\n      const blogList = blogs.filter(b => b.id !== blog.id)\n      blogList.sort((a, b) => b.likes -a.likes)\n      dispatch({\n        type: 'REMOVE_BLOG',\n        data: blogList\n      })\n    } catch (exception) {\n      console.log(exception)\n      dispatch(setNotification('Blog is already removed or you are not allowed to remove this blog', 5, 'error'))\n    }\n  }\n}\nconst blogReducer = (state=[], action) => {\n  switch (action.type) {\n  case 'NEW_BLOG':\n    return [...state, action.data]\n  case 'INIT_BLOGS':\n    return action.data\n  case 'UPDATE_BLOG':\n    return action.data\n  case 'REMOVE_BLOG':\n    return action.data\n  default:\n    return state\n  }\n}\n\nexport default blogReducer","import { useState } from 'react'\n\nexport const useField = (type) => {\n  const [value, setValue] = useState('')\n\n  const onChange = (event) => {\n    setValue(event.target.value)\n  }\n\n  const reset = () => {\n    setValue('')\n  }\n\n  return {\n    reset,\n    type,\n    value,\n    onChange,\n  }\n}","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { setNotification } from '../reducers/notificationReducer'\nimport { like, remove } from '../reducers/blogsReducer'\nimport { initializeBlog, addComment } from '../reducers/blogReducer'\nimport { useParams, useHistory } from 'react-router-dom'\nimport { useField } from '../hooks'\nimport { Button } from 'react-bootstrap'\n\nconst Blog = ({ loggedIn }) => {\n  const history = useHistory()\n  const dispatch = useDispatch()\n  const id = useParams().id\n  const blog = useSelector(state => state.blog)\n  const blogs = useSelector(state => state.blogs)\n  const content = useField('')\n\n  useEffect(() => {\n    dispatch(initializeBlog(id))\n  },[dispatch, id])\n\n  const handleLikes = () => {\n    dispatch(like(blogs, blog))\n    dispatch(setNotification(`\"${blog.title}\" has been liked by you`, 5, 'message'))\n  }\n\n  const handleRemove = () => {\n    console.log(blog)\n    const confirmed = window.confirm(`Are you sure, you want to delete ${blog.title} by ${blog.author}`)\n    if (confirmed) {\n      dispatch(remove(blogs, blog))\n      dispatch(setNotification(`\"${blog.title}\" has been removed successfully`, 5, 'message'))\n      history.push('/blogs')\n    }\n  }\n\n  const handleAdd = (event) => {\n    event.preventDefault()\n    dispatch(addComment(id, content))\n  }\n\n  if (blog === null) {\n    return null\n  }\n\n  const usersBlog = blog.user.username === loggedIn.username\n  return (\n    <div id='blogTable'>\n      <div >\n        <h2 data-testid=\"blog-data\">{blog.title}, made by {blog.author}</h2>\n      </div>\n      <div >\n        <br />\n        <a href={blog.url}>{blog.url}</a>\n        <br />\n        <p>likes: {blog.likes} </p>\n        <Button variant='info' onClick={handleLikes} id='like-button' data-testid=\"like\">like</Button>\n        <p>Added by {blog.user.name}</p>\n        {usersBlog ?\n          <Button variant='danger' onClick={handleRemove} id='remove-button' >remove blog</Button> :\n          null}\n        <h4>Comments</h4>\n        <br/>\n        <div>\n          <input {...content} reset='' />\n          <Button variant='info' type=\"submit\" onClick={handleAdd}>add comment</Button>\n        </div>\n        {blog.comments.length === 0 ?\n          <div>\n            <p>no comments yet</p>\n          </div>:\n          <div>\n            <ul>\n              {blog.comments.map(comment =>\n                <li key={comment.id}>{comment.content}</li>\n              )}\n            </ul>\n          </div>\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default Blog","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\nimport { Table } from 'react-bootstrap'\n\nconst Users = () => {\n  const users = useSelector(state => state.users)\n  return(\n    <>\n      <h2>Users</h2>\n      <Table bordered>\n        <tbody>\n          <tr>\n            <td>\n              Name\n            </td>\n            <td>\n              Created blogs\n            </td>\n          </tr>\n          {users.map(user =>\n            <tr key={user.id}>\n              <td>\n                <Link to={`/users/${user.id}`} >{user.name}</Link>\n              </td>\n              <td>\n                {user.blogs.length}\n              </td>\n            </tr>\n          )}\n        </tbody>\n      </Table>\n    </>\n  )\n}\n\nexport default Users","import userService from '../services/users'\nimport { setNotification } from '../reducers/notificationReducer'\n\nexport const initializeUser = id => {\n  return async dispatch => {\n    try {\n      const user = await userService.getOne(id)\n      dispatch({\n        type: 'WANTED_USER',\n        data: user\n      })\n    } catch (error) {\n      dispatch(setNotification(error.response.data, 5, 'error'))\n    }\n  }\n}\n\nconst userReducer = (state=null, action) => {\n  switch (action.type) {\n  case 'WANTED_USER':\n    return action.data\n  default:\n    return state\n  }\n}\n\nexport default userReducer","import React, { useEffect } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { initializeUser } from '../reducers/userReducer'\n\nconst User = () => {\n  const id = useParams().id\n  const dispatch = useDispatch()\n  const user = useSelector(state => state.user)\n  useEffect(() => {\n    dispatch(initializeUser(id))\n  },[dispatch, id])\n\n  if (!user) {\n    return null\n  }\n\n  return(\n    <div className='container'>\n      <h3>{user.name}</h3>\n      <h2>Added blogs</h2>\n      {user.blogs.length === 0 ?\n        <div>\n          <p>no added blogs</p>\n        </div>:\n        <div>\n          <ul>\n            {user.blogs.map(blog =>\n              <li key={blog.id}>\n                {blog.title}\n              </li>\n            )}\n          </ul>\n        </div>\n      }\n    </div>\n  )\n}\n\nexport default User","import React, { useState, useImperativeHandle } from 'react'\nimport{ Button } from 'react-bootstrap'\n\nconst Togglable = React.forwardRef((props, ref) => {\n  const [visible, setVisible] = useState(false)\n\n  const hideWhenVisible = { display: visible ? 'none' : '' }\n  const showWhenVisible = { display: visible ? '' : 'none' }\n\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n\n  useImperativeHandle(ref, () => {\n    return {\n      toggleVisibility\n    }\n  })\n\n  return (\n    <div>\n      <div style={hideWhenVisible}>\n        <Button variant='info' onClick={toggleVisibility}>{props.buttonLabel}</Button>\n      </div>\n      <div style={showWhenVisible}>\n        {props.children}\n        <Button variant='warning' onClick={toggleVisibility}>cancel</Button>\n      </div>\n    </div>\n  )\n})\nTogglable.displayName = 'Togglable'\n\nexport default Togglable","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { login }","import loginService from '../services/login'\nimport blogService from '../services/blogs'\nimport { setNotification } from './notificationReducer'\n\nexport const login = (usernameLogin, passwordLogin) => {\n  return async dispatch => {\n    const username = usernameLogin.value\n    const password = passwordLogin.value\n    try {\n      const user = await loginService.login({\n        username, password\n      })\n      window.localStorage.setItem(\n        'loggedBlogAppUser', JSON.stringify(user)\n      )\n      usernameLogin.reset()\n      passwordLogin.reset()\n      blogService.setToken(user.token)\n\n      dispatch({\n        type: 'LOGGED_IN',\n        data: user\n      })\n    } catch (e) {\n      dispatch(setNotification('Wrong username or password!', 5, 'error'))\n    }\n  }\n}\n\nexport const logout = () => {\n  return async dispatch => {\n    window.localStorage.removeItem('loggedBlogAppUser')\n    dispatch(setNotification('You are succesfully logged out', 5, 'message'))\n    dispatch({\n      type: 'LOGGED_OUT',\n      data: null\n    })\n  }\n}\nexport const checkAuthentication = () => {\n  let user = JSON.parse(window.localStorage.getItem('loggedBlogAppUser'))\n  const initialState = user ?  user : null\n  if (user) {\n    blogService.setToken(user.token)\n  }\n  return async dispatch => {\n    dispatch({\n      type: 'LOGGED_IN',\n      data: initialState\n    })\n  }\n}\n\nconst authentication = (state = null, action) => {\n  switch (action.type) {\n  case 'LOGGED_IN':\n    return  action.data\n  case 'FAILURE' :\n    return action.data\n  case 'LOGGED_OUT':\n    return action.data\n  default:\n    return state\n  }\n}\n\nexport default authentication","import React, { useEffect } from 'react'\nimport {\n  Switch, Route, Link,\n  Redirect, useHistory,\n} from 'react-router-dom'\nimport { Navbar, Nav, Button } from 'react-bootstrap'\nimport LoginForm from './components/LoginForm'\nimport CreateBlogForm from './components/CreateBlogForm'\nimport CreateUserForm from './components/CreateUserForm'\nimport Notification from './components/Notification'\nimport Blogs from './Blogs'\nimport Blog from './components/Blog'\nimport Users from './Users'\nimport User from './components/User'\nimport Togglable from './components/Togglable'\nimport { useField } from './hooks'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { initializeBlogs, createBlog } from './reducers/blogsReducer'\nimport { logout, login, checkAuthentication } from './reducers/loginReducer'\nimport { initializeUsers, createUser } from './reducers/usersReducer'\n\nconst App = () => {\n  const history= useHistory()\n  const author = useField('text')\n  const title = useField('text')\n  const url = useField('url')\n  const usernameLogin = useField('text')\n  const passwordLogin = useField('password')\n  const fullname = useField('text')\n  const username = useField('text')\n  const password = useField('password')\n\n  const dispatch = useDispatch()\n  const loggedIn = useSelector(state => state.loggedIn)\n\n  useEffect(() => {\n    dispatch(initializeBlogs())\n  }, [dispatch])\n\n  useEffect(() => {\n    dispatch(checkAuthentication())\n  }, [dispatch])\n\n  useEffect(() => {\n    dispatch(initializeUsers())\n  }, [dispatch])\n\n\n  const handleLogin = (event) => {\n    event.preventDefault()\n    dispatch(login(usernameLogin, passwordLogin))\n  }\n\n  const handleLogout = (event) => {\n    event.preventDefault()\n    history.push('/login')\n    dispatch(logout())\n  }\n\n  const create = (event) => {\n    event.preventDefault()\n    history.push('/login')\n    dispatch(createUser(fullname, username, password))\n  }\n  const loginForm = () => (\n    <Togglable buttonLabel=\"sign in\">\n      <LoginForm\n        handleLogin={handleLogin}\n        username= {usernameLogin}\n        password={passwordLogin}\n      />\n    </Togglable>\n  )\n\n  const createUserForm = () => (\n    <Togglable buttonLabel=\"sign up\">\n      <CreateUserForm\n        create={create}\n        fullname={fullname}\n        username= {username}\n        password={password}\n      />\n    </Togglable>\n  )\n  const blogForRef = React.createRef()\n  const createBlogForm = () => (\n    <Togglable buttonLabel=\"Add a new Blog\" ref={blogForRef}>\n      <CreateBlogForm\n        handleAddBlog={handleAddBlog}\n        title={title}\n        author={author}\n        url={url}\n      />\n    </Togglable>\n  )\n\n  const handleAddBlog = (event) => {\n    event.preventDefault()\n    dispatch(createBlog(author, title, url))\n    blogForRef.current.toggleVisibility()\n  }\n\n  return (\n    <div className=\"container\">\n      <Navbar collapseOnSelect expand=\"lg\" bg=\"light\" variant=\"light\">\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <Nav.Link href=\"#\" as=\"span\">\n              {loggedIn\n                ?  <Link to=\"/blogs\">blogs</Link>\n                : null\n              }\n            </Nav.Link>\n            <Nav.Link href=\"#\" as=\"span\">\n              {loggedIn\n                ? <Link to=\"/users\">users</Link>\n                :  null\n              }\n            </Nav.Link>\n            <Nav.Link href=\"#\" as=\"span\">\n              {loggedIn\n                ? <em><p>{loggedIn.name} logged in</p></em>\n                : <Link to=\"/login\">login</Link>\n              }\n            </Nav.Link>\n            <Nav.Link href=\"#\" as=\"span\">\n              {loggedIn\n                ? null\n                : <Link to=\"/signup\">sign up</Link>\n              }\n            </Nav.Link>\n            <Nav.Item>\n              {loggedIn\n                ? <Button type='submit'  onClick={handleLogout} id='logout-button'>logout</Button>\n                : null\n              }\n            </Nav.Item>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n      <Notification />\n      {loggedIn === null ?\n        <div>\n          <Switch>\n            <Route path='/login'>\n              {loggedIn ?\n                <Redirect to=\"/users\" />:\n                <div>\n                  {loginForm()}\n                </div>\n              }\n            </Route>\n            <Route path='/signup'>\n              <div>\n                {createUserForm()}\n              </div>\n            </Route>\n          </Switch>\n        </div>   :\n        <div >\n          <h1>Blog app</h1>\n          <Switch>\n            <Route path='/users/:id' >\n              <User />\n            </Route>\n            <Route path='/blogs/:id'>\n              <Blog loggedIn={loggedIn} />\n            </Route>\n            <Route path='/users'>\n              <Users />\n            </Route>\n            <Route path='/blogs'>\n              <div >\n                <h2>Add new blog</h2>\n                {createBlogForm()}\n                <Blogs />\n              </div>\n            </Route>\n          </Switch>\n        </div>\n      }\n    </div>\n  )\n}\n\nexport default App","\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { createStore,  applyMiddleware, combineReducers } from 'redux'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport notificationReducer from './reducers/notificationReducer'\nimport blogsReducer from './reducers/blogsReducer'\nimport loginReducer from './reducers/loginReducer'\nimport usersReducer from './reducers/usersReducer'\nimport userReducer from './reducers/userReducer'\nimport blogReducer from './reducers/blogReducer'\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nconst reducer = combineReducers({\n  notification: notificationReducer,\n  blogs: blogsReducer,\n  loggedIn: loginReducer,\n  users: usersReducer,\n  user: userReducer,\n  blog: blogReducer,\n\n})\nconst store = createStore(\n  reducer,\n  composeWithDevTools(\n    applyMiddleware(thunk)\n  )\n)\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n)"],"sourceRoot":""}