{"version":3,"sources":["services/blogs.js","services/login.js","components/Blog.js","components/LoginForm.js","components/CreateBlogForm.js","components/Notification.js","components/Togglable.js","hooks/index.js","App.js","index.js"],"names":["token","getAll","axios","get","then","response","data","create","newObject","a","async","config","headers","Authorization","post","setToken","newToken","update","id","put","deleteBlog","delete","login","credentials","Blog","blog","user","handleLikes","handleRemove","useState","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","usersBlog","username","style","paddingTop","paddingLeft","border","borderWidth","marginBottom","onClick","className","title","author","href","url","likes","name","LoginForm","handleLogin","password","onSubmit","reset","type","CreateBlogForm","handleAddBlog","Notification","message","errorMessage","Togglable","React","forwardRef","props","ref","useImperativeHandle","buttonLabel","children","displayName","useField","value","setValue","onChange","event","target","App","blogs","setBlogs","setUser","setErrorMessage","setMessage","usernameLogin","passwordLogin","useEffect","blogService","initialBlogs","console","log","sort","b","loggedUserJSON","window","localStorage","getItem","JSON","parse","preventDefault","loginService","setItem","stringify","setTimeout","timeout","blogForRef","createRef","find","userId","newBlog","updatetBlog","updatetBlogs","map","confirm","filter","current","blogObject","returnedBlog","concat","catch","error","removeItem","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2132b92e.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = async newObject => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  const response = await axios.post(baseUrl, newObject, config)\n  return response.data\n}\n\nconst update = async (id, newObject) => {\n  const response = await axios.put(`${baseUrl}/${id}`, newObject)\n  return response.data\n}\n\nconst deleteBlog = async id => {\n  const config = {\n    headers: { Authorization: token }\n  }\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\n  return response.data\n}\n\nexport default { getAll, create, setToken, update, deleteBlog }","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { login }","import React, { useState } from 'react'\n\nconst Blog = ({ blog, user, handleLikes, handleRemove }) => {\n  const [visible, setVisible] = useState(true)\n\n  const blogStyle = {\n    paddingTop: 10,\n    paddingLeft: 2,\n    border: 'solid',\n    borderWidth: 1,\n    marginBottom: 5\n  }\n  const hideWhenVisible = { display: visible ? 'none' : '' }\n  const showWhenVisible = { display: visible ? '' : 'none' }\n\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n\n  const usersBlog = blog.user.username === user.username\n  return (\n    <div style={blogStyle}>\n      <div onClick={toggleVisibility} style={showWhenVisible} className=\"togglableContent\">\n        {blog.title} {blog.author}\n      </div>\n      <div style ={hideWhenVisible} className=\"showAll\">\n        <div onClick={toggleVisibility} className=\"togglableContent2\">\n          {blog.title} {blog.author}\n        </div>\n        <br />\n        <a href={blog.url}>{blog.url}</a>\n        <br />\n        likes: {blog.likes}\n        <button onClick={handleLikes}>like</button>\n        <p>Added by {blog.user.name}</p>\n        {usersBlog ?\n          <button onClick={handleRemove}>remove</button> :\n          null}\n      </div>\n    </div>\n  )\n}\n\nexport default Blog","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst LoginForm = ({ handleLogin, username, password}) => {\n  return (\n  <div>\n    <form onSubmit={handleLogin}>\n      <div>\n        Username:\n        <inputÂ {...username} reset=''/>\n      </div>\n      <div>\n        Password:\n        <input {...password} reset=''/>\n      </div>\n      <button type=\"submit\">login</button>\n    </form>\n  </div>\n  )\n}\nLoginForm.propTypes = {\n  handleLogin: PropTypes.func.isRequired,\n  username: PropTypes.object.isRequired,\n  password: PropTypes.object.isRequired,\n}\nexport default LoginForm","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst CreateBlogForm = ({ handleAddBlog, title, author, url }) => (\n  <form onSubmit={handleAddBlog}>\n    <div>\n      Title:\n      <input {...title} reset='' />\n    </div>\n    <div>\n      Author:\n      <input {...author} reset='' />\n    </div>\n    <div>\n      Url:\n      <input {...url} reset=''/>\n    </div>\n    <button type=\"submit\">Add</button>\n  </form>\n)\nCreateBlogForm.propTypes = {\n  handleAddBlog: PropTypes.func.isRequired,\n  title: PropTypes.object.isRequired,\n  author: PropTypes.object.isRequired,\n  url: PropTypes.object.isRequired,\n}\nexport default CreateBlogForm","import React from 'react'\nimport '../index.css'\n\nconst Notification = ( { message, errorMessage } ) => {\n  if (errorMessage !== '') {\n    return (\n      <div className=\"error\">\n        {errorMessage}\n      </div>\n    )\n  } else if (message !== '') {\n    return (\n      <div className=\"added\">\n        {message}\n      </div>\n    )\n  }\n  return null\n}\n\nexport default Notification","import React, { useState, useImperativeHandle } from 'react'\n\nconst Togglable = React.forwardRef((props, ref) => {\n\n  const [visible, setVisible] = useState(false)\n\n  const hideWhenVisible = { display: visible ? 'none' : '' }\n  const showWhenVisible = { display: visible ? '' : 'none' }\n\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n\n  useImperativeHandle(ref, () => {\n    return {\n      toggleVisibility\n    }\n  })\n\n  return (\n    <div>\n      <div style={hideWhenVisible}>\n        <button onClick={toggleVisibility}>{props.buttonLabel}</button>\n      </div>\n      <div style={showWhenVisible}>\n        {props.children}\n        <button onClick={toggleVisibility}>cancel</button>\n      </div>\n    </div>\n  )\n})\nTogglable.displayName = 'Togglable'\n\nexport default Togglable","import { useState } from 'react'\n\nexport const useField = (type) => {\n  const [value, setValue] = useState('')\n\n  const onChange = (event) => {\n    setValue(event.target.value)\n  }\n\n  const reset = () => {\n    setValue('')\n  }\n\n  return {\n    reset,\n    type,\n    value,\n    onChange,\n  }\n}","import React, { useState, useEffect } from 'react'\nimport blogService from './services/blogs'\nimport loginService from './services/login'\nimport Blog from './components/Blog'\nimport LoginForm from './components/LoginForm'\nimport CreateBlogForm from './components/CreateBlogForm'\nimport Notification from './components/Notification'\nimport Togglable from './components/Togglable'\nimport { useField } from './hooks'\n\nfunction App() {\n  const [blogs, setBlogs] = useState([])\n  const [user, setUser] = useState(null)\n  const author = useField('text')\n  const title = useField('text')\n  const url = useField('url')\n  const [errorMessage, setErrorMessage] = useState('')\n  const [message, setMessage] = useState('')\n  const usernameLogin = useField('text')\n  const passwordLogin = useField('password')\n\n  useEffect(() => {\n    blogService\n      .getAll()\n      .then(initialBlogs => {\n        console.log('promise fulfilled')\n        initialBlogs.sort((a, b) => b.likes - a.likes)\n        setBlogs(initialBlogs)\n        console.log(initialBlogs)\n      })\n  }, [])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogAppUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      blogService.setToken(user.token)\n    }\n  }, [])\n\n  const rows = () =>\n    blogs.map(blog =>\n      <Blog key={blog.id} blog={blog} user={user}\n        handleLikes={() => handleLikes(blog.id)}\n        handleRemove={() => handleRemove(blog.id)}/>\n    )\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n\n    const username = usernameLogin.value\n    const password = passwordLogin.value\n    try {\n      const user = await loginService.login({\n        username, password\n      })\n      window.localStorage.setItem(\n        'loggedBlogAppUser', JSON.stringify(user)\n      )\n      usernameLogin.reset()\n      passwordLogin.reset()\n      setUser(user)\n      blogService.setToken(user.token)\n    } catch (exception) {\n      setErrorMessage('Wrong username or password')\n      setTimeout(() => {\n        setErrorMessage('')\n      }, 5000)\n    }\n  }\n\n  const timeout = () => {\n    setTimeout(() => {\n      setMessage('')\n      setErrorMessage('')\n    }, 5000)\n  }\n\n  const handleLogout = (event) => {\n    event.preventDefault()\n    window.localStorage.removeItem('loggedBlogAppUser')\n    setUser(null)\n    setMessage('You are succesfully logged out')\n    timeout()\n  }\n\n  const loginForm = () => (\n    <Togglable buttonLabel=\"sign in\">\n      <LoginForm\n        handleLogin={handleLogin}\n        username= {usernameLogin}\n        password={passwordLogin}\n      />\n    </Togglable>\n  )\n  const blogForRef = React.createRef()\n\n  const createBlogForm = () => (\n    <Togglable buttonLabel=\"Add a new Blog\" ref={blogForRef}>\n      <CreateBlogForm\n        handleAddBlog={handleAddBlog}\n        title={title}\n        author={author}          \n        url={url}\n      />\n    </Togglable>\n  )\n\n  const handleLikes = async (id) => {\n    const blog = blogs.find(b => b.id === id)\n    console.log(blog)\n    const likes = blog.likes +1\n    const userId = blog.user.id\n    console.log(likes)\n    console.log(id)\n    const newBlog = {\n      user: userId,\n      likes: likes,\n      author: blog.author,\n      title: blog.title,\n      url: blog.url\n    }\n    const updatetBlog = await blogService.update(blog.id, newBlog)\n    const updatetBlogs = blogs.map(b => b.id !== updatetBlog.id ? b : updatetBlog)\n    updatetBlogs.sort((a, b) => b.likes -a.likes)\n    setBlogs(updatetBlogs)\n  }\n\n  const handleRemove = id => {\n    const blog = blogs.find(b => b.id === id)\n    const confirmed = window.confirm(`Are you sure, you want to delete ${blog.title} by ${blog.author}`)\n    if (confirmed) {\n      console.log('true')\n      blogService.deleteBlog(blog.id)\n      setBlogs(blogs.filter(b => b.id !== id))\n    }\n  }\n\n  const handleAddBlog = (event) => {\n    event.preventDefault()\n    blogForRef.current.toggleVisibility()\n    const blogObject = {\n      author: author.value,\n      title: title.value,\n      url: url.value,\n    }\n\n    blogService\n      .create(blogObject)\n      .then(returnedBlog => {\n        console.log(returnedBlog)\n        setMessage(`A new blog ${title.value} by ${author.value} has been added`)\n        timeout()\n        setBlogs(blogs.concat(returnedBlog))\n        author.reset()\n        title.reset()\n        url.reset()\n      })\n      .catch(error => {\n        setErrorMessage(error.message, 'Validation error! Title and url required. Url must be at least 4 and title at least 1 character long')\n        timeout()\n      })\n  }\n\n  return (\n    <div>\n      <Notification message={message} errorMessage={errorMessage}/>\n      {user === null ?\n        <div>\n          <h1>Login</h1>\n          {loginForm()}\n        </div> :\n        <div>\n          <p>{user.name} logged in</p>\n          <form onSubmit={handleLogout}>\n            <button type=\"submit\">logout</button>\n          </form>\n          <h2>Add new blog</h2>\n          {createBlogForm()}\n\n          <h1>Blogs</h1>\n          <ul>\n            { rows() }\n          </ul>\n        </div>\n      }\n    </div>\n  )\n}\n\nexport default App","\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}